-- Primeiro Macro: CLICKUP (sem mudanças)
setDefaultTab("cave")
local itemIdsToUse, useRange, moveRange = {8997}, 1, 7
local function findItemsInLayer(layerIndex)
  local searchLayers = {
    {from = {x = posx() - 1, y = posy() - 1, z = posz()}, to = {x = posx() + 1, y = posy() + 1, z = posz()}},
    {from = {x = posx() - 2, y = posy() - 2, z = posz()}, to = {x = posx() + 2, y = posy() + 2, z = posz()}},
    {from = {x = posx() - 3, y = posy() - 3, z = posz()}, to = {x = posx() + 3, y = posy() + 3, z = posz()}},
    {from = {x = posx() - 4, y = posy() - 4, z = posz()}, to = {x = posx() + 4, y = posy() + 4, z = posz()}},
    {from = {x = posx() - 5, y = posy() - 5, z = posz()}, to = {x = posx() + 5, y = posy() + 5, z = posz()}},
    {from = {x = posx() - 6, y = posy() - 6, z = posz()}, to = {x = posx() + 6, y = posy() + 6, z = posz()}},
    {from = {x = posx() - 7, y = posy() - 7, z = posz()}, to = {x = posx() + 7, y = posy() + 7, z = posz()}}
  }
  if layerIndex > #searchLayers then return false end
  local currentLayer = searchLayers[layerIndex]
  for x = currentLayer.from.x, currentLayer.to.x do
    for y = currentLayer.from.y, currentLayer.to.y do
      local tile = g_map.getTile({x = x, y = y, z = posz()})
      if tile then
        for _, item in ipairs(tile:getItems()) do
          if item and table.contains(itemIdsToUse, item:getId()) then
            if CaveBot.isOn() then CaveBot.setOff() print("desativando cavebot") end
            local distance = getDistanceBetween(pos(), tile:getPosition())
            if distance <= useRange then
              g_game.use(item)
              return true
            elseif distance > useRange and distance <= moveRange then
              if autoWalk(tile:getPosition(), moveRange, {ignoreNonPathable = true, precision = 1}) then
                delay(100)
                return true
              end
            end
          end
        end
      end
    end
  end
  return findItemsInLayer(layerIndex + 1)
end

clickup = macro(100, function()
  if not findItemsInLayer(1) then
    if CaveBot.isOff() then
      print("ativando cavebot")
      CaveBot.setOn()
    end
  end
end)
clickup.setOn(false) -- Começa desligado

-- Segundo Macro: EVENTOS (sem mudanças)
-- CONFIGURAÇÃO
defaultTab = "cave"
local macroDelay = 250
local outfit = {type = 356, head = 94, body = 94, legs = 94, feet = 94}

UI.Label("CAVE FORA DO HORARIO DE EVENTO:")
storage.idleProfile = storage.idleProfile or "AFK"
UI.TextEdit(storage.idleProfile or "", function(widget, text)
  storage.idleProfile = text
end)

local profileSchedule = {
  ["02:40"] = "evento", ["03:20"] = "Saida_evento",
  ["05:40"] = "evento", ["06:07"] = "Saida_evento",
  ["07:00"] = "evento", ["07:20"] = "Saida_evento",
  ["08:40"] = "evento", ["09:07"] = "Saida_evento",
  ["10:00"] = "evento", ["10:20"] = "Saida_evento",
  ["11:40"] = "evento", ["12:20"] = "Saida_evento",
  ["13:40"] = "evento", ["14:07"] = "Saida_evento",
  ["15:00"] = "evento", ["15:20"] = "Saida_evento",
  ["15:40"] = "evento", ["16:07"] = "Saida_evento",
  ["17:00"] = "evento", ["17:20"] = "Saida_evento",
  ["19:40"] = "evento", ["20:20"] = "Saida_evento",
  ["22:40"] = "evento", ["23:07"] = "Saida_evento",
  ["13:00"] = "clickup", ["13:12"] = "clickup_saida",
  ["18:00"] = "clickup", ["18:12"] = "clickup_saida",
  ["22:00"] = "clickup", ["22:12"] = "clickup_saida",
}

local function isInEventBlock()
  local now = os.date("*t")
  local currentMinutes = now.hour * 60 + now.min
  local scheduleList = {}
  for timeStr, profile in pairs(profileSchedule) do
    local h, m = timeStr:match("(%d+):(%d+)")
    local totalMinutes = tonumber(h) * 60 + tonumber(m)
    table.insert(scheduleList, {minutes = totalMinutes, profile = profile})
  end
  table.sort(scheduleList, function(a, b) return a.minutes < b.minutes end)
  for i = 1, #scheduleList - 1 do
    local current = scheduleList[i]
    local next = scheduleList[i + 1]
    if not current.profile:lower():match("saida") and next.profile:lower():match("saida") then
      if current.minutes <= currentMinutes and currentMinutes <= next.minutes then
        return true, current.profile
      end
    end
  end
  return false
end

eventos = macro(macroDelay, function()
  local now = os.date("*t")
  local currentTime = string.format("%02d:%02d", now.hour, now.min)
  local profileToLoad = profileSchedule[currentTime]
  if profileToLoad then
    if CaveBot.getCurrentProfile() ~= profileToLoad then
      CaveBot.setCurrentProfile(profileToLoad)
      print("[EVENTO] Perfil carregado: " .. profileToLoad)
    end
    return
  end
  local inBlock, eventProfile = isInEventBlock()
  if inBlock then
    if CaveBot.getCurrentProfile() ~= eventProfile then
      CaveBot.setCurrentProfile(eventProfile)
      print("[BLOCO ATIVO] Mantendo perfil: " .. eventProfile)
    end
    return
  end
  local idleProfile = storage.idleProfile
  if CaveBot.getCurrentProfile() ~= idleProfile then
    CaveBot.setCurrentProfile(idleProfile)
    print("[IDLE] Perfil padrão carregado: " .. idleProfile)
  end
  if not CaveBot.isOn() then
    CaveBot.setOn(true)
  end
end)
eventos.setOn(false) 

addIcon("eventos", {outfit = outfit, text="EVENTOS"}, function(icon, isOn)
  clickup.setOn(isOn)
  eventos.setOn(isOn)
  if isOn then
    icon.text:setText("Eventos")
  else
    icon.text:setText("Eventos")
  end
end)
