setDefaultTab("tools")
-- HIDE EFFECT --------------------------------------------------
-- CONFIGURAÇÃO
local hideAllMacro = {5000} 
local macroName = "EFECCTS"
local iconIDs = {7359}
local macroDelay = 1000
local iconDelay = 200

storage[macroName.."Index"] = storage[macroName.."Index"] or 1

local myMacro = macro(macroDelay, function()
  -- O corpo principal da macro não precisa fazer nada repetidamente
end)
myMacro.setOn(false)

local onAddThingCallback = function(tile, thing)
  if myMacro.isOff() then return end
  if thing:isEffect() then
    thing:hide()
  end
end

local onStaticTextCallback = function(thing, text)
  if myMacro.isOff() then return end
  if not text:find("says:") then
    g_map.cleanTexts()
  end
end

onAddThing(onAddThingCallback)
onStaticText(onStaticTextCallback)

local myIcon = addIcon(macroName, {item = iconIDs[1], text = macroName}, function(icon, isOn)
  myMacro.setOn(isOn)
  if isOn then
    icon.text:setText(macroName.." OFF")
  else
    icon.text:setText(macroName)
  end
end)
myIcon:setSize({width = 100, height = 50})

macro(iconDelay, function()
  storage[macroName.."Index"] = (storage[macroName.."Index"] % #iconIDs) + 1
  myIcon.item:setItemId(iconIDs[storage[macroName.."Index"]])
end)
----------------------------------------------------------------------------------------------------------
-----------------------------------------
-- RELOG --------------------------------------------------------
local relogMacro = macro(200, function()
    if hppercent() <= 0 or not g_game.isOnline() then
        modules.client_entergame.CharacterList.doLogin()
    end
end)
relogMacro.setOn(false)

addIcon("relog", {item=4247, text="RELOG"}, function(icon, isOn)
    relogMacro.setOn(isOn)
end)

--------------------------------------------------------------------------------------------------------------------
------------------------------------------------------
-- MAGIA BUFF ---------------------------------------------------
storage.buff = storage.buff or "Digite o buff"
local buffMacro = macro(200, function()
    if not hasPartyBuff() then
        say(storage.buff)
    end
end)
buffMacro.setOn(false)

addLabel("buffLabel", "COLOQUE A MAGIA DE BUFF")
addTextEdit("buffText", storage.buff, function(widget, text)
    storage.buff = text
end)

addIcon("buffz", {item=9392, text="BUFF"}, function(icon, isOn)
    buffMacro.setOn(isOn)
end)

----------------------------------------------------------------------------------------------------------------------------------
------------------------------------- CONJURE 5X e 4X ------------------------------------------------------------
macro5x = macro(200, function()
    if soul() >= 25 then
        say("conjure 5x")
    end
end)
local icon5x = addIcon("Conjure 5X", {item=6545, text="Conjure 5X"}, function(icon, isOn)
  macro5x.setOn(isOn)
end)
icon5x:setSize({width = 100, height = 50})


macro4x = macro(200, function()
    if soul() >= 25 then
        say("conjure 4x")
    end
end)
local icon4x = addIcon("Conjure 4X", {item=6544, text="Conjure 4X"}, function(icon, isOn)
  macro4x.setOn(isOn)
end)
icon4x:setSize({width = 100, height = 50})

-------------------------------------------------------------------
-- RESET --------------------------------------------------------
local resetMacroIDs = {5000, 200}

local macroName = "RESETAR"
local iconIDs = {3613, 3613}
local macroDelay = 200
local iconDelay = 200

storage[macroName.."Index"] = storage[macroName.."Index"] or 1

local resetMacro = macro(macroDelay, function()
  -- vazio intencionalmente
end)
resetMacro.setOn(false)

local myMacro = macro(5000, function()
  -- vazio, apenas para delay principal
end)
myMacro.setOn(false)

onTextMessage(function(mode, text)
  if text:find("You were downgraded from") and resetMacro:isOn() then
    say("!resetar")
  end
end)

local myIcon = addIcon(macroName, {item = iconIDs[1], text = macroName}, function(icon, isOn)
  resetMacro.setOn(isOn)
  if isOn then
  else
    icon.text:setText(macroName)
  end
end)
myIcon:setSize({width = 100, height = 50})

macro(iconDelay, function()
  storage[macroName.."Index"] = (storage[macroName.."Index"] % #iconIDs) + 1
  myIcon.item:setItemId(iconIDs[storage[macroName.."Index"]])
end)
----------------------------------------------------------------------------------------
-- OPEN BACKPACK ------------------------------------------------
local openBPMacro = macro(200, function()
    local bpItem = getBack()
    local bp = getContainer(0)
    if not bp and bpItem then g_game.open(bpItem) end
end)
openBPMacro.setOn(false)

onContainerClose(function(container)
    if container:getId() == 0 then
        local bpItem = getBack()
        if bpItem then g_game.open(bpItem) end
    end
end)

addIcon("bp", {item=5927, text="OPEN BP"}, function(icon, isOn)
    openBPMacro.setOn(isOn)
end)
---------------------------------------------------------------------------------------------------------
------------------------------------------------------------------
-- PICKUP --------------------------------------------------------
-- CONFIGURAÇÃO
local SlotBack = 3
local macroName = "PEGAR ITENS"
local iconIDs = {2526}
local macroDelay = 250
local iconDelay = 200

storage[macroName.."Index"] = storage[macroName.."Index"] or 1

local myMacro = macro(macroDelay, function()
  local tile = g_map.getTile(pos())
  if tile then
    for _, item in ipairs(tile:getItems()) do
      if item:isPickupable() then
        if g_game.move(item, {x=65535, y=SlotBack, z=0}, item:getCount()) then
          delay(100)
        end
      end
    end
  end
end)
myMacro.setOn(false)

local myIcon = addIcon(macroName, {item = iconIDs[1], text = macroName}, function(icon, isOn)
  myMacro.setOn(isOn)
  if isOn then
  else
    icon.text:setText(macroName)
  end
end)
myIcon:setSize({width = 100, height = 50})

macro(iconDelay, function()
  storage[macroName.."Index"] = (storage[macroName.."Index"] % #iconIDs) + 1
  myIcon.item:setItemId(iconIDs[storage[macroName.."Index"]])
end)

--------------------------------------------------------------------------------------------------------------------------
----------------------------------------
-- DANCE --------------------------------------------------------
local danceMacro = macro(200, function()
    turn(math.random(0, 3))
end)
danceMacro.setOn(false)

addIcon("danceIcon", {item=9378, text="DANCE"}, function(icon, isOn)
    danceMacro.setOn(isOn)
end)

---------------------------------------------------------------------------------------------------------
--------------------------------------------------
-- AURA ---------------------------------------------------------
-- CONFIGURAÇÃO
local macroName = "AURA"
local iconIDs = {10871}
local macroDelay = 20000
local iconDelay = 200

storage[macroName.."Index"] = storage[macroName.."Index"] or 1

local myMacro = macro(macroDelay, function()
  say("!aura on")
end)
myMacro.setOn(false)

local myIcon = addIcon(macroName, {item = iconIDs[1], text = macroName}, function(icon, isOn)
  myMacro.setOn(isOn)
  if isOn then
    icon.text:setText(macroName.." ON")
  else
    icon.text:setText(macroName)
  end
end)
myIcon:setSize({width = 100, height = 50})

macro(iconDelay, function()
  storage[macroName.."Index"] = (storage[macroName.."Index"] % #iconIDs) + 1
  myIcon.item:setItemId(iconIDs[storage[macroName.."Index"]])
end)
----------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------
-- SUMMON -------------------------------------------------------
setDefaultTab("tools")
local summonDelay = 20000
local lastSummon = 0
addLabel("summon", "COLOQUE NOME DO BIXO QUE VAI SE TRANSFORMAR")
addTextEdit("summonName", storage.summonName or "Digite o nome", function(widget, text)
    storage.summonName = text
end)

local summonMacro = macro(100, function()
    if storage.summonName ~= "" and now >= lastSummon + summonDelay then
        say('utevo res ina "' .. storage.summonName .. '"')
        lastSummon = now
    end
end)
summonMacro.setOn(false)

addIcon("summon", {item=8175, text="SUMMON"}, function(icon, isOn)
    summonMacro.setOn(isOn)
end)
------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------
----------------------------
local PvpConfig = {
    buyAtLogin = true,
    buyCommand = "!pvp off"
}

PvpConfig.hasBought = false
addIcon("PvP Off", {item={id=9056, count=1}, text="PvP Off"}, macro(1000, function(m)
    if PvpConfig.buyAtLogin and not PvpConfig.hasBought then
        say(PvpConfig.buyCommand)
        PvpConfig.hasBought = true
    end
    if g_game.getClientVersion() > 1000 and player:getBlessings() == 0 then
        say(PvpConfig.buyCommand)
    end
end))
------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------
local m_antipush = macro(50, function()
  local t = g_map.getTile(pos())
  if t then
      local topT = t:getTopUseThing()
      if not topT:isNotMoveable() then return end
      g_game.move(findItem(3031), pos(), 2)
  end
end)

addIcon("AntiPushIcon", {item={id=3031, count=5}, text= "AntPush", hotkey= "F4"}, m_antipush) 
--------------------------------------------------------------------------------------------------------
-----------------------
-- CONFIGURAÇÃO
local paralyze = {3165}
local macroName = "PARALYZE"
local iconIDs = {11630}
local macroDelay = 500
local iconDelay = 200

storage[macroName.."Index"] = storage[macroName.."Index"] or 1

local myMacro = macro(macroDelay, function()
  if g_game.isAttacking() then
    usewith(paralyze[1], g_game.getAttackingCreature())
  end
end)
myMacro.setOn(false)

local myIcon = addIcon(macroName, {item = iconIDs[1], text = macroName}, function(icon, isOn)
  myMacro.setOn(isOn)
  if isOn then
  else
    icon.text:setText(macroName)
  end
end)
myIcon:setSize({width = 100, height = 50})

macro(iconDelay, function()
  storage[macroName.."Index"] = (storage[macroName.."Index"] % #iconIDs) + 1
  myIcon.item:setItemId(iconIDs[storage[macroName.."Index"]])
end)

--------------------------------------------------------------------------------------------------------------------------------
-----------------------------------
local potionsId = {3241, 9149, 0000} -- Adicione mais potions se quiser
local minStaminaHoursLeft = 40

-- Armazena estado do macro
local staminaMacro = macro(1000, function()
    if stamina() < minStaminaHoursLeft * 60 then
        for _, potId in ipairs(potionsId) do
            local pot = findItem(potId)
            if pot then
                use(pot, player)
                break
            end
        end
    end
end)
staminaMacro.setOn(false) -- Começa desativado

-- Cria ícone com visual e toggle
local staminaIcon = addIcon("Stamina", {item=3241, text="Stamina"}, function(icon, isOn)
    staminaMacro.setOn(isOn)
end)
staminaIcon:setSize({width = 100, height = 50})

-- Atualiza texto com a stamina atual
macro(200, function()
    staminaIcon.text:setText("Stam: "..math.floor(stamina() / 60).."h")
    for _, id in ipairs(potionsId) do
        if findItem(id) then
            staminaIcon.item:setItemId(id)
            break
        end
    end
end)
--------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------
local potions, lastUsedIndex = {6542, 6543, 6544, 6545}, 0
storage.lastCombo = lastUsedIndex
macroCombo = macro(1000, function()
    lastUsedIndex = (lastUsedIndex % #potions) + 1
    storage.lastCombo = lastUsedIndex
    local pot = findItem(potions[lastUsedIndex])
    if pot then
        use(pot, player)
        delay(100)
    end
end)
local comboIcon = addIcon("Combo", {item=6542, text="Combo"}, function(icon, isOn)
    macroCombo.setOn(isOn)
end)
comboIcon:setSize({width = 100, height = 50})
macroUpdateComboIcon = macro(200, function()
    comboIcon.text:setText("Usando: "..storage.lastCombo + 1 .."x")
    comboIcon.item:setItemId(storage.lastCombo + 6541)
end)
-------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------
----------------------------------
setDefaultTab("tools")
-- Tile IDs configuráveis
addLabel("safetext", "COLOQUE ID DOS TILES SAFEZONE")
storage.tileIDs = storage.tileIDs or {10145, 54321}

-- Macro de seguir para tiles específicos
TileFollowMacro = macro(1, function() end)

-- Campo de edição para inserir os IDs
addTextEdit("tileIDs", table.concat(storage.tileIDs, ", "), function(widget, text)
  local ids = {}
  for id in string.gmatch(text, "%d+") do
    table.insert(ids, tonumber(id))
  end
  storage.tileIDs = ids
end)

-- Função para buscar o tile com ID desejado
local function findClosestTileWithIDs(ids)
  local playerPos = pos()
  local closestTile = nil
  local closestDistance = math.huge
  for x = -15, 15 do
    for y = -15, 15 do
      local tile = g_map.getTile({x = playerPos.x + x, y = playerPos.y + y, z = playerPos.z})
      if tile then
        local topThing = tile:getTopUseThing()
        if topThing and table.contains(ids, topThing:getId()) then
          local distance = getDistanceBetween(playerPos, tile:getPosition())
          if distance < closestDistance then
            closestDistance = distance
            closestTile = tile:getPosition()
          end
        end
      end
    end
  end
  return closestTile
end

-- Movimento automático ao tile
onCreaturePositionChange(function(creature, newPos, oldPos)
  if TileFollowMacro:isOff() then return end
  if creature:getName() ~= player:getName() then return end

  local targetTilePos = findClosestTileWithIDs(storage.tileIDs)
  if not targetTilePos then
    return print("Nenhum tile com os IDs fornecidos foi encontrado!")
  end
  if getDistanceBetween(pos(), targetTilePos) > 0 then
    autoWalk(targetTilePos, 15, {precision = 0})
  end
end)

-- Animação do ícone de SAFEZONE
local safeIcons = {8646, 8647, 8648, 8649}
storage.safeAnimIndex = storage.safeAnimIndex or 1

local safeIcon = addIcon("TileFollowMacro", {item=8646, text="SAFEZONE"}, function(icon, isOn)
  TileFollowMacro.setOn(isOn)
end)
safeIcon:setSize({width = 100, height = 50})

-- Atualização visual do ícone (como no combo de potions)
macro(200, function()
  storage.safeAnimIndex = (storage.safeAnimIndex % #safeIcons) + 1
  safeIcon.text:setText("SAFEZONE")
  safeIcon.item:setItemId(safeIcons[storage.safeAnimIndex])
end)
------------------------------------------------------------------------------------------------------------------------------
----------------------------------
setDefaultTab("tools")
local markedPositions = {}
local key = "F8"

function tablefind(tab, el)
  for index, value in ipairs(tab) do
    if value == el then
      return index
    end
  end
end

local m_travarMW = macro(10, function()
  if #markedPositions == 0 then return end
  
  for i, pos in pairs(markedPositions) do
    local tile = g_map.getTile(pos)
    if not tile or not (tile:getPosition().z == posz()) or getDistanceBetween(player:getPosition(), tile:getPosition()) > 7 then
      table.remove(markedPositions, tablefind(markedPositions, pos))
      if tile then tile:setText("") end
    end
  end

  for i, pos in pairs(markedPositions) do
    local tile = g_map.getTile(pos)
    if tile and not tile:hasCreature() then
      tile:setText("MARKED")
      if tile:getTimer() < (storage.mwThrowTimer or 70) or (tile:getTopThing():getId() ~= 2129 and tile:getTopThing():getId() ~= 2130) then
        useWith(3180, tile:getTopUseThing())
      end
    end
  end
end)

addIcon("TravarMWIcon", {item={id=2129, count=1}, text="MW Lock", hotkey="F8"}, m_travarMW)

onRemoveThing(function(tile, thing)
  if not m_travarMW.isOn() then return end
  if thing:getId() ~= 2129 and thing:getId() ~= 2128 and thing:getId() ~= 2130 then return end
  if tile:getText() == "MARKED" then
    useWith(3180, thing)
  end
end)

local resetTimer = 0
local resetTiles = false

onKeyDown(function(keys)
  if not m_travarMW.isOn() then return end
  if keys == key and resetTimer == 0 then
    resetTimer = now
  end
end)

onKeyPress(function(keys)
  if not m_travarMW.isOn() then return end
  if keys == key and (resetTimer - now) < -1500 then
    if #markedPositions > 0 then
      for i, pos in pairs(markedPositions) do
        local tile = g_map.getTile(pos)
        if tile then tile:setText("") end
      end
      markedPositions = {}
      resetTiles = true
    else
      resetTimer = 0
    end
  else
    resetTimer = 0
    resetTiles = false
  end
end)

onKeyUp(function(keys)
  if not m_travarMW.isOn() then return end
  if keys == key and not resetTiles then
    local tile = getTileUnderCursor()
    if tile then
      if tile:getText() == "MARKED" then
        tile:setText("")
        table.remove(markedPositions, tablefind(markedPositions, tile:getPosition()))
      else
        tile:setText("MARKED")
        table.insert(markedPositions, tile:getPosition())
      end
    end
  end
end)

hotkey("Insert", "", function()
  local tile = getTileUnderCursor()
  if not tile then return end
  if tile:getCreatures()[1] then return end
  if (tile:getTopThing():getId() ~= 2129 and tile:getTopThing():getId() ~= 2130) then
    useWith(3180, tile:getTopUseThing())  
  end
end)

UI.Label("TEMPO DE LANCAMENTO MW:")
UI.TextEdit(storage.mwThrowTimer or "70", function(widget, text)
  storage.mwThrowTimer = tonumber(text)
end)

-----------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------
local markedPositions = {}
local key = "F7"

function tablefind(tab, el)
  for index, value in ipairs(tab) do
    if value == el then
      return index
    end
  end
end

local m_travarGW = macro(10, function()
  if #markedPositions == 0 then return end
  
  for i, pos in pairs(markedPositions) do
    local tile = g_map.getTile(pos)
    if not tile or not (tile:getPosition().z == posz()) or getDistanceBetween(player:getPosition(), tile:getPosition()) > 7 then
      table.remove(markedPositions, tablefind(markedPositions, pos))
      if tile then tile:setText("") end
    end
  end

  for i, pos in pairs(markedPositions) do
    local tile = g_map.getTile(pos)
    if tile and not tile:hasCreature() then
      tile:setText("MARKED")
      if tile:getTimer() < (storage.mwThrowTimer or 70) or (tile:getTopThing():getId() ~= 2129 and tile:getTopThing():getId() ~= 2130) then
        useWith(3156, tile:getTopUseThing())
      end
    end
  end
end)

addIcon("TravarGWIcon", {item={id=2130, count=1}, text="GW Lock", hotkey="F7"}, m_travarGW)

onRemoveThing(function(tile, thing)
  if not m_travarGW.isOn() then return end
  if thing:getId() ~= 2129 and thing:getId() ~= 2128 and thing:getId() ~= 2130 then return end
  if tile:getText() == "MARKED" then
    useWith(3156, thing)
  end
end)

local resetTimer = 0
local resetTiles = false

onKeyDown(function(keys)
  if not m_travarGW.isOn() then return end
  if keys == key and resetTimer == 0 then
    resetTimer = now
  end
end)

onKeyPress(function(keys)
  if not m_travarGW.isOn() then return end
  if keys == key and (resetTimer - now) < -1500 then
    if #markedPositions > 0 then
      for i, pos in pairs(markedPositions) do
        local tile = g_map.getTile(pos)
        if tile then tile:setText("") end
      end
      markedPositions = {}
      resetTiles = true
    else
      resetTimer = 0
    end
  else
    resetTimer = 0
    resetTiles = false
  end
end)

onKeyUp(function(keys)
  if not m_travarGW.isOn() then return end
  if keys == key and not resetTiles then
    local tile = getTileUnderCursor()
    if tile then
      if tile:getText() == "MARKED" then
        tile:setText("")
        table.remove(markedPositions, tablefind(markedPositions, tile:getPosition()))
      else
        tile:setText("MARKED")
        table.insert(markedPositions, tile:getPosition())
      end
    end
  end
end)

hotkey("Insert", "", function()
  local tile = getTileUnderCursor()
  if not tile then return end
  if tile:getCreatures()[1] then return end
  if (tile:getTopThing():getId() ~= 2129 and tile:getTopThing():getId() ~= 2130) then
    useWith(3156, tile:getTopUseThing())  
  end
end)

UI.Label("TEMPO DE LANCAMENTO GW:")
UI.TextEdit(storage.mwThrowTimer or "70", function(widget, text)
  storage.mwThrowTimer = tonumber(text)
end)

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------
local function checkPos(x, y)
  local xyz = g_game.getLocalPlayer():getPosition()
  xyz.x = xyz.x + x
  xyz.y = xyz.y + y
  local tile = g_map.getTile(xyz)
  if tile then
    return g_game.use(tile:getTopUseThing())
  else
    return false
  end
end

local m_bugmap = macro(1, function(m) 
  if modules.corelib.g_keyboard.isKeyPressed('Up') and not modules.corelib.g_keyboard.isKeyPressed('Right') and not modules.corelib.g_keyboard.isKeyPressed('Left') then
    checkPos(0, -5)
  elseif modules.corelib.g_keyboard.isKeyPressed('Up') and modules.corelib.g_keyboard.isKeyPressed('Right') then
    checkPos(3, -3)
  elseif modules.corelib.g_keyboard.isKeyPressed('Right') and not modules.corelib.g_keyboard.isKeyPressed('Up') and not modules.corelib.g_keyboard.isKeyPressed('Down') then
    checkPos(5, 0)
  elseif modules.corelib.g_keyboard.isKeyPressed('Down') and modules.corelib.g_keyboard.isKeyPressed('Right') then
    checkPos(3, 3)
  elseif modules.corelib.g_keyboard.isKeyPressed('Down') and not modules.corelib.g_keyboard.isKeyPressed('Right') and not modules.corelib.g_keyboard.isKeyPressed('Left') then
    checkPos(0, 5)
  elseif modules.corelib.g_keyboard.isKeyPressed('Down') and modules.corelib.g_keyboard.isKeyPressed('Left') then
    checkPos(-3, 3)
  elseif modules.corelib.g_keyboard.isKeyPressed('Left') and not modules.corelib.g_keyboard.isKeyPressed('Up') and not modules.corelib.g_keyboard.isKeyPressed('Down') then
    checkPos(-5, 0)
  elseif modules.corelib.g_keyboard.isKeyPressed('Up') and modules.corelib.g_keyboard.isKeyPressed('Left') then
    checkPos(-3, -3)
  end
end)

addIcon("bugmapIcon", {item={id=3079, count=1}, text="Bug Map"}, m_bugmap)

------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------
local config = {
  machete = 3308,
  hotkey = "F12",
  WGWallId = 2130
}

function getNearTiles(pos)
  if type(pos) ~= "table" then pos = pos:getPosition() end

  local tiles = {}
  local dirs = {
      {-1, 1}, {0, 1}, {1, 1}, {-1, 0}, {1, 0}, {-1, -1}, {0, -1}, {1, -1}
  }
  for i = 1, #dirs do
      local tile = g_map.getTile({
          x = pos.x - dirs[i][1],
          y = pos.y - dirs[i][2],
          z = pos.z
      })
      if tile then table.insert(tiles, tile) end
  end

  return tiles
end

addIcon("TramontinaIcon", {item={id=config.machete, count=1}, text="Machete", hotkey = config.hotkey}, macro(200, function()
  for _, t in ipairs(getNearTiles(pos())) do
    local topT = t:getTopThing()
    if topT and topT:getId() == config.WGWallId then
      return useWith(config.machete, topT)
    end
  end
end))
-----------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------
-- CONFIGURAÇÃO
local castIconIDs = {9616, 9617, 9618, 9619}
local macroName = "CAST ON"
local iconIDs = {9616, 9617, 9618, 9619}
local macroDelay = 1000
local iconDelay = 700

storage[macroName.."Index"] = storage[macroName.."Index"] or 1
local castStarted = false

local myMacro = macro(macroDelay, function()
  if not castStarted and g_game.isOnline() then
    say("!cast on")
  end
end)
myMacro.setOn(false)

local myIcon = addIcon(macroName, {item = iconIDs[1], text = macroName}, function(icon, isOn)
  myMacro.setOn(isOn)
  if isOn then
  else
    icon.text:setText(macroName)
  end
end)
myIcon:setSize({width = 100, height = 50})

onTextMessage(function(mode, text)
  if text:lower():find("your cast stream already enabled") then
    castStarted = true
  end
end)

macro(iconDelay, function()
  storage[macroName.."Index"] = (storage[macroName.."Index"] % #iconIDs) + 1
  myIcon.item:setItemId(iconIDs[storage[macroName.."Index"]])
end)
